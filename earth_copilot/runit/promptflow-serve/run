#! /bin/bash

CONDA_ENV_PATH="$(conda info --base)/envs/promptflow-serve"
export PATH="$CONDA_ENV_PATH/bin:$PATH"

echo "Starting PromptFlow service initialization..."
echo "Current directory: $(pwd)"
echo "Available files:"
ls
echo "Connection files:"
ls /connections

echo "Creating PromptFlow connections..."
pf connection create --file /connections/acs_connection_nasa.yaml
if [ $? -eq 0 ]; then
    echo "ACS connection created successfully"
else
    echo "Warning: ACS connection creation failed"
fi

pf connection create --file /connections/azure_open_ai_connection.yaml
if [ $? -eq 0 ]; then
    echo "Azure OpenAI connection created successfully"
else
    echo "Warning: Azure OpenAI connection creation failed"
fi

# Use fewer workers for better resource management in Azure App Service
WORKER_NUM=${PROMPTFLOW_WORKER_NUM:-"2"}
WORKER_THREADS=${PROMPTFLOW_WORKER_THREADS:-"1"}
SERVING_ENGINE=${PROMPTFLOW_SERVING_ENGINE:-"flask"}
gunicorn_app="promptflow.core._serving.app:create_app(engine='${SERVING_ENGINE}')"

echo "Changing to flow directory..."
cd /flow

# Apply the PromptFlow patch before starting
echo "Applying PromptFlow patch..."
python patch_promptflow.py
if [ $? -eq 0 ]; then
    echo "Patch applied successfully"
else
    echo "Warning: Patch failed, but continuing with startup"
fi

echo "Starting PromptFlow server..."
if [ "$SERVING_ENGINE" = "flask" ]; then
    echo "start promptflow serving with worker_num: ${WORKER_NUM}, worker_threads: ${WORKER_THREADS}, app: ${gunicorn_app}"
    gunicorn -w ${WORKER_NUM} --threads ${WORKER_THREADS} -b "0.0.0.0:80" --timeout 300 --preload ${gunicorn_app}
else
    echo "start promptflow serving with worker_num: ${WORKER_NUM}, app: ${gunicorn_app}"
    gunicorn --worker-class uvicorn.workers.UvicornWorker -w ${WORKER_NUM} -b "0.0.0.0:80" --timeout 300 --preload ${gunicorn_app}
fi
